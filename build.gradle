if (project.hasProperty('release')) {
    apply from: 'profile_release.gradle'
} else {
    apply from: 'profile_snapshot.gradle'
}

buildscript {
    ext {
        springBootVersion = '1.3.5.RELEASE'
    }
    repositories {
        maven {
            url corporateRepoUrl + "/content/groups/internal/"

            credentials {
                username = repoUser
                password = repoPassword
            }
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath group:'org.springframework.boot', name:'spring-boot-gradle-plugin', version: springBootVersion
        classpath group:'org.sonarsource.scanner.gradle', name:'sonarqube-gradle-plugin', version:'1.2'
    }
}

allprojects {
    group 'com.cardinalhealth.fuse'
    version "${versionNumber}${snapshot}"

    apply plugin: 'jacoco'
    apply plugin: 'spring-boot'

    bootRepackage.enabled = false
    findMainClass.enabled = false

    repositories {
        maven {
            url corporateRepoUrl + "/content/groups/internal/"

            credentials {
                username = repoUser
                password = repoPassword
            }
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
    }

    publishing {
        publications {
            maven(MavenPublication) {
                groupId "${project.group}"
                artifactId "${project.name}"
                version "${project.version}"
                artifact sourceJar { classifier "sources" }
                from components.java
            }
        }
        repositories {
            maven {
                url  corporateRepoUrl + corporateRepoPath

                credentials {
                    username = repoUser
                    password = repoPassword
                }
            }
        }
    }

    jacocoTestReport {
        additionalSourceDirs = files(sourceSets.main.allSource.srcDirs)
        sourceDirectories = files(sourceSets.main.allSource.srcDirs)
        classDirectories =  files(sourceSets.main.output)
        reports {
            html.enabled = false
            xml.enabled = true
            csv.enabled = false
        }
    }

    dependencies {
        testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
        testCompile group: 'org.meanbean', name: 'meanbean', version: '2.0.3'
    }
}

apply plugin: 'org.sonarqube'
apply plugin: 'idea'

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}

sonarqube {
    properties {
        property "sonar.projectName", "Keystone Library"
        property "sonar.projectKey", "keystone"
    }
}

idea {
    project {
        jdkName = '1.8'
        languageLevel = '1.8'
    }
}

jacocoTestReport {
    dependsOn = subprojects.test
    additionalSourceDirs = files(subprojects.sourceSets.main.allSource.srcDirs)
    sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories =  files(subprojects.sourceSets.main.output)
    executionData = files(subprojects.jacocoTestReport.executionData)
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
    onlyIf = {
        true
    }
    doFirst {
        executionData = files(executionData.findAll {
            it.exists()
        })
    }
}

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/tests")
    reportOn subprojects*.test
}
